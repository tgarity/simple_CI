name: Multi-Container Integration Test

on:
  push:
    branches:
      - docker
  pull_request:
    branches:
      - docker

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Cache Docker Compose
      - name: Cache Docker Compose
        id: docker-compose-cache
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/docker-compose
          key: ${{ runner.os }}-docker-compose-${{ hashFiles('/usr/local/bin/docker-compose') }}

      # Install Docker Compose if not cached
      - name: Install Docker Compose if not cached
        if: steps.docker-compose-cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Build Docker image
      - name: Build and cache Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: myapp:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Move cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Set up Python and cache pip packages
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install Pipenv and dependencies
      - name: Install Pipenv
        run: pip install pipenv

      - name: Install dependencies with Pipenv
        run: pipenv install

      # Run services and tests
      - name: Build and start services with Docker Compose
        run: docker-compose -f docker-compose.yml up -d
        working-directory: ./

      - name: Run integration tests
        run: pipenv run pytest
        working-directory: ./

      # Cleanup
      - name: Tear down services
        if: always()
        run: docker-compose down
        working-directory: ./